)
# geom_point(data = subset(fourway_df, color_overlap == "Sig_in_X"), color = color_x, size = point_size) +
# geom_point(data = subset(fourway_df, color_overlap == "Sig_in_Y"), color = color_y, size = point_size) +
# geom_point(data = subset(fourway_df, color_overlap == "Sig_in_Both"), color = color_both, size = point_size) +
# scale_color_manual(values = c(color_x,
#                               color_y,
#                               color_both,
#                               color_ignore),
#                    labels = c(paste0("Sig. in ", contrast_1, " (n=", n_sig_x, ")"),
#                               paste0("Sig. in ", contrast_2," (n=",n_sig_y,")"),
#                               paste0("Sig. in both (n=",n_sig_both,")"),
#                               "")
#)
}
if(color_mode=="quadrants") {
# if (nrow(fourway_df %>% filter(color_quadrants == "Ignore"))>0){
#   plot_fourway = plot_fourway +geom_point(data = subset(fourway_df, color_quadrants == "Ignore"), color = color_ignore, size = point_size)
# }
plot_fourway = plot_fourway +
# geom_point(data = subset(fourway_df, color_quadrants == "Up.X"), color = color_x_up, size = point_size) +
# geom_point(data = subset(fourway_df, color_quadrants == "Up.Y"), color = color_y_up, size = point_size) +
# geom_point(data = subset(fourway_df, color_quadrants == "Down.X"), color = color_x_down, size = point_size) +
# geom_point(data = subset(fourway_df, color_quadrants == "Down.Y"), color = color_y_down, size = point_size) +
# geom_point(data = subset(fourway_df, color_quadrants == "Sig_in_Both"), color = color_both, size = point_size) +
geom_point(aes(color=color_quadrants),size = point_size) +
scale_color_manual(values = c(color_ignore,
color_x_up,
color_y_up,
color_x_down,
color_y_down,
color_both
),
labels = c("Below FC/FDR thresholds",
paste0("Up in ", right_text, " (n=", n_sig_x_up, ")"),
paste0("Up in ", up_text," (n=",n_sig_y_up,")"),
paste0("Down in ", right_text, " (n=", n_sig_x_down, ")"),
paste0("Down in ", up_text," (n=",n_sig_y_down,")"),
paste0("Sig. in both (n=",n_sig_both,")")
)
)
}
if (color_axes==TRUE){
plot_fourway = plot_fourway +
#x-axis
geom_segment(aes(y = min_lim_y, yend = min_lim_y, x = (min_lim_x), xend = 0), size=2, color = color_x_down) +
geom_segment(aes(y = min_lim_y, yend = min_lim_y, x = 0, xend = max_lim_x ), size=2, color = color_x_up) +
#y-axis
geom_segment(aes(x = min_lim_x, xend = min_lim_x, y = (min_lim_y), yend = 0), size=2, color = color_y_down) +
geom_segment(aes(x = min_lim_x, xend = min_lim_x, y = 0, yend = max_lim_y ), size=2, color = color_y_up)
}
if (genenames == TRUE){
if(label_shared_sig == TRUE){
plot_fourway <- plot_fourway + geom_text_repel(data = fourway_df,
aes(x = Log2FC.x,
y = Log2FC.y,
fontface = "bold",
label = ifelse(SigBothFilter == TRUE , Gene,"")),
size=label_size,
max.overlaps = max_overlaps, #set to inf
segment.alpha = segment_trans,
direction = "both",
force = 15,
min.segment.length = 0.25)
} else {
plot_fourway <- plot_fourway + geom_text_repel(data = fourway_df,
aes(x = Log2FC.x,
y = Log2FC.y,
fontface = "bold",
label = ifelse(Label == TRUE , Gene,"")),
size=label_size,
max.overlaps = max_overlaps, #set to inf
segment.alpha = segment_trans,
direction = "both",
force = 15,
min.segment.length = 0.25)
}
}
plot_fourway <- plot_fourway +
xlab(paste0(contrast_1)) +
ylab(paste0(contrast_2)) +
ggtitle(paste0(plot_title))
return(plot_fourway)
}
}
jk_4wayplot(a, b, fc_col="log2FC", fc_thres = 0.2, fdr_col = "qVal", color_mode = 'overlap')
jk_4wayplot <- function(dataframe1,
dataframe2,
fc_col = "log2FC", #fold change column
fdr_col = "FDR", #p or q value column
fc_thres = 0.01,
fdr_thres = 0.05,
plot_fourway = TRUE,
genenames = TRUE,
label_shared_sig = FALSE,
color_mode = "overlap", #overlap or quadrants
symmetry = TRUE, #for axis symmetry
color_axes = TRUE,
color_x_up = "#4d528f",
color_x_down = "#a3a1c3",
color_y_up = "#de5b6c",
color_y_down = "#f3acb0",
color_x = "#9A9ABC",
color_y = "#F6A6A9",
color_both = "black",
color_ignore = "grey",
max_overlaps = 20,
contrast_1 = "Contrast1_Name",
contrast_2 = "Contrast2_Name",
label_size = 2.5, #gene name size
right_group = "group1",
up_group = "group2",
segment_trans = 0.3,
unity_alpha =1,
aspect = 12/16,
point_size = 2,
plot_title = "Significantly altered genes/proteins in both contrasts") {
if (!color_mode %in% c("overlap", "quadrants")) stop("color_mode can only be either 'overlap' or 'quadrants'")
jk_sharedDE(dataframe1, dataframe2, fc_col = fc_col, fdr_col = fdr_col) %>%
mutate(Sig.x = FDR.x < fdr_thres,
Sig.y = FDR.y < fdr_thres) %>%
mutate(color_overlap = case_when(Sig.x == TRUE & Sig.y == FALSE & abs(Log2FC.x) > fc_thres ~ "Sig_in_X",
Sig.x == FALSE & Sig.y == TRUE & abs(Log2FC.y) > fc_thres ~ "Sig_in_Y",
Sig.x == TRUE & Sig.y == TRUE & abs(Log2FC.x) > fc_thres & abs(Log2FC.y) > fc_thres  ~ "Sig_in_Both",
T ~ "Ignore")) %>%
mutate(color_quadrants = case_when(Sig.x == TRUE & Sig.y == FALSE & Log2FC.x > fc_thres ~ "Up.X",
Sig.x == TRUE & Sig.y == FALSE & Log2FC.x < -1*fc_thres ~ "Down.X",
Sig.y == TRUE & Sig.x == FALSE & Log2FC.y > fc_thres ~ "Up.Y",
Sig.y == TRUE & Sig.x == FALSE & Log2FC.y < -1*fc_thres ~ "Down.Y",
Sig.x == TRUE & Sig.y == FALSE & Log2FC.x > fc_thres ~ "Up.X",
Sig.x == TRUE & Sig.y == TRUE & abs(Log2FC.x) > fc_thres & abs(Log2FC.y) > fc_thres ~ "Sig_in_Both",
T ~ "Ignore",
abs(Log2FC.x) < fc_thres & abs(Log2FC.y) < fc_thres ~ "Ignore")
) %>%
mutate(SigBothFilter = color_quadrants == "Sig_in_Both") %>%
mutate(color_overlap = factor(color_overlap, levels=c("Ignore",
"Sig_in_X",
"Sig_in_Y",
"Sig_in_Both"
))
) %>%
mutate(color_quadrants = factor(color_quadrants, levels = c("Ignore",
"Up.X",
"Up.Y",
"Down.X",
"Down.Y",
"Sig_in_Both"
))
) %>%
mutate(Label = color_quadrants %in% c("Up.X", "Down.X", "Up.Y", "Down.Y")) -> fourway_df
if(color_mode == "overlap"){
fourway_df = fourway_df %>% arrange(color_overlap) #sort so that 'ignored' points plotted first
}
if(color_mode == "quadrants"){
fourway_df = fourway_df %>% arrange(color_quadrants) #sort so that 'ignored' points plotted first
}
if(plot_fourway == FALSE){
return(fourway_df)
} else{
fourway_df %>% dplyr::select(Log2FC.x) %>% max() -> four_way_plot_max.x
fourway_df %>% dplyr::select(Log2FC.y) %>% max() -> four_way_plot_max.y
fourway_df %>% dplyr::select(Log2FC.x) %>% min() -> four_way_plot_min.x
fourway_df %>% dplyr::select(Log2FC.y) %>% min() -> four_way_plot_min.y
fourway_df %>% filter(color_overlap == "Sig_in_Both") %>% nrow() -> n_sig_both
fourway_df %>% filter(color_overlap == "Sig_in_X") %>% nrow() -> n_sig_x
fourway_df %>% filter(color_overlap == "Sig_in_Y") %>% nrow() -> n_sig_y
fourway_df %>% filter(color_quadrants == "Up.X") %>% nrow() -> n_sig_x_up
fourway_df %>% filter(color_quadrants == "Down.X") %>% nrow() -> n_sig_x_down
fourway_df %>% filter(color_quadrants == "Up.Y") %>% nrow() -> n_sig_y_up
fourway_df %>% filter(color_quadrants == "Down.Y") %>% nrow() -> n_sig_y_down
four_way_plot_min <- min(four_way_plot_min.x, four_way_plot_min.y)
four_way_plot_max <- max(four_way_plot_max.x, four_way_plot_max.y)
xmargin.max =  four_way_plot_max.x + ((four_way_plot_max.x - four_way_plot_min.x)/15)
xmargin.min = four_way_plot_min.x - ((four_way_plot_max.x - four_way_plot_min.x)/15)
ymargin.max =  four_way_plot_max.y + ((four_way_plot_max.y - four_way_plot_min.y)/15)
ymargin.min = four_way_plot_min.y - ((four_way_plot_max.x - four_way_plot_min.x)/15)
#for symmetry, default
abs_lim_x = max(abs(xmargin.min), abs(xmargin.max))
abs_lim_y = max(abs(ymargin.min), abs(ymargin.max))
max_lim_x = abs_lim_x
min_lim_x = -1*abs_lim_x
max_lim_y = abs_lim_y
min_lim_y = -1*abs_lim_y
if (symmetry ==FALSE){
max_lim_x = xmargin.max
min_lim_x = xmargin.min
max_lim_y = ymargin.max
min_lim_y = ymargin.min
}
plot_fourway <- fourway_df %>%
ggplot(., aes(x=Log2FC.x, y=Log2FC.y, label=Gene)) +
geom_hline(yintercept = (fc_thres), color="#898989", linetype = "dashed") +
geom_hline(yintercept = -1*(fc_thres), color="#898989", linetype = "dashed") +
geom_vline(xintercept = (fc_thres), color="#898989", linetype = "dashed") +
geom_vline(xintercept = -1*(fc_thres), color="#898989", linetype = "dashed") +
geom_abline(intercept=0, slope=1, color="#898989", alpha = unity_alpha) +
xlim(c(four_way_plot_min,four_way_plot_max)) +
ylim(c(four_way_plot_min,four_way_plot_max)) +
theme_classic() +
theme(legend.title = element_blank(),
aspect.ratio = aspect,
plot.title = element_text(hjust = 0.5, face = "bold")) +
scale_y_continuous(expand = expansion(mult = c(0,0),
add = c(0,0)), #c(0,0),
limits = c(min_lim_y, max_lim_y)) +
scale_x_continuous(expand = expansion(mult = c(0,0),
add = c(0,0)), #c(0,0),
limits = c(min_lim_x, max_lim_x))
if(color_mode == "overlap"){
plot_fourway = plot_fourway +
geom_point(aes(color=color_overlap),size = point_size) +
scale_color_manual(values = c(color_ignore,
color_x,
color_y,
color_both
),
labels = c("Below FC/FDR thresholds",
paste0("Sig. in ", contrast_1, " (n=", n_sig_x, ")"),
paste0("Sig. in ", contrast_2," (n=",n_sig_y,")"),
paste0("Sig. in both (n=",n_sig_both,")")
)
)
}
if(color_mode=="quadrants") {
plot_fourway = plot_fourway +
geom_point(aes(color=color_quadrants),size = point_size) +
scale_color_manual(values = c(color_ignore,
color_x_up,
color_y_up,
color_x_down,
color_y_down,
color_both
),
labels = c("Below FC/FDR thresholds",
paste0("Up in ", right_group, " (n=", n_sig_x_up, ")"),
paste0("Up in ", up_group," (n=",n_sig_y_up,")"),
paste0("Down in ", right_group, " (n=", n_sig_x_down, ")"),
paste0("Down in ", up_group," (n=",n_sig_y_down,")"),
paste0("Sig. in both (n=",n_sig_both,")")
)
)
}
if (color_axes==TRUE){
plot_fourway = plot_fourway +
#x-axis
geom_segment(aes(y = min_lim_y, yend = min_lim_y, x = (min_lim_x), xend = 0), size=2, color = color_x_down) +
geom_segment(aes(y = min_lim_y, yend = min_lim_y, x = 0, xend = max_lim_x ), size=2, color = color_x_up) +
#y-axis
geom_segment(aes(x = min_lim_x, xend = min_lim_x, y = (min_lim_y), yend = 0), size=2, color = color_y_down) +
geom_segment(aes(x = min_lim_x, xend = min_lim_x, y = 0, yend = max_lim_y ), size=2, color = color_y_up)
}
if (genenames == TRUE){
if(label_shared_sig == TRUE){
plot_fourway <- plot_fourway + geom_text_repel(data = fourway_df,
aes(x = Log2FC.x,
y = Log2FC.y,
fontface = "bold",
label = ifelse(SigBothFilter == TRUE , Gene,"")),
size=label_size,
max.overlaps = max_overlaps, #set to inf
segment.alpha = segment_trans,
direction = "both",
force = 15,
min.segment.length = 0.25)
} else {
plot_fourway <- plot_fourway + geom_text_repel(data = fourway_df,
aes(x = Log2FC.x,
y = Log2FC.y,
fontface = "bold",
label = ifelse(Label == TRUE , Gene,"")),
size=label_size,
max.overlaps = max_overlaps, #set to inf
segment.alpha = segment_trans,
direction = "both",
force = 15,
min.segment.length = 0.25)
}
}
plot_fourway <- plot_fourway +
xlab(paste0(contrast_1)) +
ylab(paste0(contrast_2)) +
ggtitle(paste0(plot_title))
return(plot_fourway)
}
}
jk_4wayplot(a, b, fc_col="log2FC", fc_thres = 0.2, fdr_col = "qVal", color_mode = 'overlap')
jk_4wayplot(a, b, fc_col="log2FC", fc_thres = 0.2, fdr_col = "qVal", color_mode = 'quadrants')
library(antiboydy)
devtools::build()
install.packages("devtools")
devtools::check()
devtools::check()
devtools::check(args = '--no-examples')
install.packages("devtools")
install.packages("dplyr")
source("man/jk_4wayplot.R")
source("jk_4wayplot.R")
source("R/jk_4ways.R")
df1 = read.csv("_testData/4M_WT control vs. TG control.csv")
df2 = read.csv("_testData/4M_WT control vs. WT es.csv")
df1 %>% head()
jk_4wayplot(dataframe1 = df1, dataframe2 = df2, fc_col = 'log2FC', fdr_col = 'qVal', color_mode = 'quadrants',fc_thres = 0.2,
fdr_thres = 0.2, label_shared_sig=TRUE)
source("R/jk_4ways.R")
jk_4wayplot(dataframe1 = df1, dataframe2 = df2, fc_col = 'log2FC', fdr_col = 'qVal', color_mode = 'quadrants',fc_thres = 0.2,
fdr_thres = 0.2, label_shared_sig=TRUE)
restart
source("R/jk_4ways.R")
df1 = read.csv("_testData/4M_WT control vs. TG control.csv")
df2 = read.csv("_testData/4M_WT control vs. WT es.csv")
jk_4wayplot(dataframe1 = df1, dataframe2 = df2, fc_col = 'log2FC', fdr_col = 'qVal', color_mode = 'quadrants',fc_thres = 0.2,
fdr_thres = 0.2, label_shared_sig=TRUE)
library(dplyr)
jk_4wayplot(dataframe1 = df1, dataframe2 = df2, fc_col = 'log2FC', fdr_col = 'qVal', color_mode = 'quadrants',fc_thres = 0.2,
fdr_thres = 0.2, label_shared_sig=TRUE)
#add column on direction based on above or below 0
dataframe1 = dataframe1 %>% mutate(Direction = case_when(Log2FC > 0 ~ "UP", T ~ "DOWN"))
source("R/jk_4ways.R")
jk_4wayplot(dataframe1 = df1, dataframe2 = df2, fc_col = 'log2FC', fdr_col = 'qVal', color_mode = 'quadrants',fc_thres = 0.2,
fdr_thres = 0.2, label_shared_sig=TRUE)
library(ggplot2)
jk_4wayplot(dataframe1 = df1, dataframe2 = df2, fc_col = 'log2FC', fdr_col = 'qVal', color_mode = 'quadrants',fc_thres = 0.2,
fdr_thres = 0.2, label_shared_sig=TRUE)
library(ggrepel)
jk_4wayplot(dataframe1 = df1, dataframe2 = df2, fc_col = 'log2FC', fdr_col = 'qVal', color_mode = 'quadrants',fc_thres = 0.2,
fdr_thres = 0.2, label_shared_sig=TRUE)
jk_4wayplot(dataframe1 = df1, dataframe2 = df2, fc_col = 'log2FC', fdr_col = 'qVal', color_mode = 'quadrants',fc_thres = 0.2,
fdr_thres = 0.2, label_shared_sig=TRUE, genenames = T)
jk_4wayplot(dataframe1 = df1, dataframe2 = df2, fc_col = 'log2FC', fdr_col = 'qVal', color_mode = 'overlap',fc_thres = 0.2,
fdr_thres = 0.2, label_shared_sig=TRUE)
jk_4wayplot(dataframe1 = df1, dataframe2 = df2, fc_col = 'log2FC', fdr_col = 'qVal', color_mode = 'overlap',fc_thres = 0.2,
fdr_thres = 0.2, label_shared_sig=TRUE, genenames = T)
jk_4wayplot(dataframe1 = df1, dataframe2 = df2, fc_col = 'log2FC', fdr_col = 'qVal', color_mode = 'overlap',fc_thres = 0.2,
fdr_thres = 0.2, label_shared_sig=TRUE, genenames = T)
source("R/jk_4ways.R")
jk_4wayplot(dataframe1 = df1, dataframe2 = df2, fc_col = 'log2FC', fdr_col = 'qVal', color_mode = 'overlap',fc_thres = 0.2,
fdr_thres = 0.2, label_shared_sig=TRUE, genenames = T)
jk_4wayplot(dataframe1 = df1, dataframe2 = df2, fc_col = 'log2FC', fdr_col = 'qVal', color_mode = 'overlap',fc_thres = 0.2,
fdr_thres = 0.2, label_shared_sig=F, genenames = T)
jk_4wayplot(dataframe1 = df1, dataframe2 = df2, fc_col = 'log2FC', fdr_col = 'qVal', color_mode = 'overlap',fc_thres = 0.2,
fdr_thres = 0, label_shared_sig=F, genenames = T)
jk_4wayplot(dataframe1 = df1, dataframe2 = df2, fc_col = 'log2FC', fdr_col = 'qVal', color_mode = 'overlap',fc_thres = 0.2,
fdr_thres = 0, label_shared_sig=T, genenames = T)
jk_4wayplot(dataframe1 = df1, dataframe2 = df2, fc_col = 'log2FC', fdr_col = 'qVal', color_mode = 'overlap',fc_thres = 0,
fdr_thres = 0.5, label_shared_sig=T, genenames = T)
jk_4wayplot(dataframe1 = df1, dataframe2 = df2, fc_col = 'log2FC', fdr_col = 'qVal', color_mode = 'quadrant',fc_thres = 0,
fdr_thres = 0.5, label_shared_sig=T, genenames = T)
jk_4wayplot(dataframe1 = df1, dataframe2 = df2, fc_col = 'log2FC', fdr_col = 'qVal', color_mode = 'quadrants',fc_thres = 0.2,
fdr_thres = 0, label_shared_sig=T, genenames = T)
jk_4wayplot(dataframe1 = df1, dataframe2 = df2, fc_col = 'log2FC', fdr_col = 'qVal', color_mode = 'quadrants',fc_thres = 0.2,
fdr_thres = 0, label_shared_sig=T, genenames = F,plot_fourway = F)
jk_4wayplot(dataframe1 = df1, dataframe2 = df2, fc_col = 'log2FC', fdr_col = 'qVal', color_mode = 'overlap',fc_thres = 0.2,
fdr_thres = 0, label_shared_sig=T, genenames = F,plot_fourway = F)
jk_4wayplot(dataframe1 = df1, dataframe2 = df2, fc_col = 'log2FC', fdr_col = 'qVal', color_mode = 'overlap',fc_thres = 0.2,
fdr_thres = 0, label_shared_sig=T, genenames = F,plot_fourway = F) %>% select(SigBothFilter) %>% table()
jk_4wayplot(dataframe1 = df1, dataframe2 = df2, fc_col = 'log2FC', fdr_col = 'qVal', color_mode = 'overlap',fc_thres = 0,
fdr_thres = 0.05, label_shared_sig=T, genenames = F,plot_fourway = F) %>% select(SigBothFilter) %>% table()
jk_4wayplot(dataframe1 = df1, dataframe2 = df2, fc_col = 'log2FC', fdr_col = 'qVal', color_mode = 'overlap',fc_thres = 0,
fdr_thres = 0.05, label_shared_sig=T, genenames = F,plot_fourway = F) %>% select(Label) %>% table()
jk_4wayplot(dataframe1 = df1, dataframe2 = df2, fc_col = 'log2FC', fdr_col = 'qVal', color_mode = 'overlap',fc_thres = 0,
fdr_thres = 0.05, label_shared_sig=F, genenames = F)
jk_4wayplot(dataframe1 = df1, dataframe2 = df2, fc_col = 'log2FC', fdr_col = 'qVal', color_mode = 'quadrants',fc_thres = 0, fdr_thres = 0.05, label_shared_sig=F, genenames = F)
library(read_excel)
install.packages('read_excel')
library(readxl)
install.packages('readxl')
library(readxl)
pd_pos = read_excel("../../Projects/09_GeoMx_PD_Maria_collab/PD_only_analysis/DEG_Results_PDPOSvsCTRLNEG.xlsx")
pd_neg = read_excel("../../Projects/09_GeoMx_PD_Maria_collab/PD_only_analysis/DEG_Results_PDNEGvsCTRLNEG.xlsx")
pd_post %>% head()
pd_pos %>% head()
jk_4wayplot(dataframe1 = pd_pos, dataframe2 = pd_neg , fc_col = 'logFC', fdr_col = 'adj.P.Val', color_mode = 'quadrants',fc_thres = 0.1, fdr_thres = 0.05, label_shared_sig=F, genenames = F)
pd_pos %>% filter(adj.P.Val > 0.05)
jk_4wayplot(dataframe1 = pd_pos, dataframe2 = pd_neg , fc_col = 'logFC', fdr_col = 'adj.P.Val', color_mode = 'overlap',fc_thres = 0.1, fdr_thres = 0.05, label_shared_sig=F, genenames = F)
jk_4wayplot(dataframe1 = pd_pos, dataframe2 = pd_neg , fc_col = 'logFC', fdr_col = 'adj.P.Val', color_mode = 'overlap',fc_thres = 1, fdr_thres = 0.05, label_shared_sig=F, genenames = F)
source("R/jk_volcano.R")
jk_volcano(pd_pos, fc_col = "logFC", fdr_col='adj.P.Val')
jk_volcano(pd_pos, fc_col = "logFC", fdr_col='adj.P.Val', genenames = F)
jk_volcano(pd_neg, fc_col = "logFC", fdr_col='adj.P.Val', genenames = F)
df1
df1[df1$Direction == "UP"]
df1[df1$Direction == "UP",]
source("R/jk_volcano.R")
jk_volcano(df1, fc_col = Log2FC, fdr_col="qVal", genenames = F)
jk_volcano(df1, fc_col = "Log2FC", fdr_col="qVal", genenames = F)
df1 %>% colnames()
jk_volcano(df1, fc_col = "log2FC", fdr_col="qVal", genenames = F)
jk_volcano(df1, fc_col = "log2FC", fdr_col="qVal", genenames = F, highlight_genes = T, highlight_list = c("Gfap"))
jk_volcano(df1, fc_col = "log2FC", fdr_col="qVal", genenames = T, highlight_genes = T, highlight_list = c("Gfap"))
jk_volcano(df1, fc_col = "log2FC", fdr_col="qVal", genenames = T, highlight_genes = T, highlight_list = c("Pfn1"))
jk_volcano(df1, fc_col = "log2FC", fdr_col="qVal", genenames = T, highlight_genes = F, highlight_list = c("Pfn1"))
jk_volcano(df1, fc_col = "log2FC", fdr_col="qVal", genenames = T, highlight_genes = T, highlight_list = c("DPM1"))
source("R/jk_volcano.R")
jk_volcano(df1, fc_col = "log2FC", fdr_col="qVal", genenames = T, highlight_genes = T, highlight_list = c("DPM1"))
source("R/jk_volcano.R")
jk_volcano(df1, fc_col = "log2FC", fdr_col="qVal", genenames = T, highlight_genes = T, highlight_list = c("DPM1"))
source("R/jk_volcano.R")
jk_volcano(df1, fc_col = "log2FC", fdr_col="qVal", genenames = T, highlight_genes = T, highlight_list = c("DPM1"))
source("R/jk_volcano.R")
jk_volcano(df1, fc_col = "log2FC", fdr_col="qVal", genenames = T, highlight_genes = T, highlight_list = c("DPM1"))
source("R/jk_volcano.R")
jk_volcano(df1, fc_col = "log2FC", fdr_col="qVal", genenames = T, highlight_genes = T, highlight_list = c("DPM1"))
source("R/jk_volcano.R")
jk_volcano(df1, fc_col = "log2FC", fdr_col="qVal", genenames = T, highlight_genes = T, highlight_list = c("DPM1"))
source("R/jk_volcano.R")
jk_volcano(df1, fc_col = "log2FC", fdr_col="qVal", genenames = T, highlight_genes = T, highlight_list = c("DPM1"))
source("R/jk_volcano.R")
jk_volcano(df1, fc_col = "log2FC", fdr_col="qVal", genenames = T, highlight_genes = T, highlight_list = c("DPM1"))
a = jk_volcano(df1, fc_col = "log2FC", fdr_col="qVal", genenames = T, highlight_genes = T, highlight_list = c("DPM1"))
a
a + geom_segment(aes(y=0, x = 0.5, yend=0, xend=0), color='red')
a + geom_segment(aes(y=0, x = 0.5, yend=0, xend=0), size = 2, color='red')
a + annotate(aes(y=0, x = 0.5, yend=0, xend=0), size = 2, color='red')
a + annotate(y=0, x = 0.5, yend=0, xend=0, size = 2, color='red')
a + annotate(y=0, x = 0.5, yend=0, xend=0, size = 2, geom='line', color='red')
a + annotate(y=0, x = 0.5, yend=0, xend=0, size = 2, geom='segment', color='red')
jk_volcano(df1, fc_col = "log2FC", fdr_col="qVal", genenames = T, highlight_genes = T, highlight_list = c("DPM1"))
source("R/jk_volcano.R")
jk_volcano(df1, fc_col = "log2FC", fdr_col="qVal", genenames = T, highlight_genes = T, highlight_list = c("DPM1"))
jk_volcano(df1, fc_col = "log2FC", fdr_col="qVal", genenames = T, highlight_genes = T, highlight_list = c("DPM1", "PNF1"))
jk_volcano(df1, fc_col = "log2FC", fdr_col="qVal", genenames = T, highlight_genes = T, highlight_list = c("DPM1", "GFAP"))
jk_volcano(df1, fc_col = "log2FC", fdr_col="qVal", genenames = T, highlight_genes = T, highlight_list = c("DPM1", "GFAP"), max_overlap = 0)
jk_volcano(df1, fc_col = "log2FC", fdr_col="qVal", genenames = T, highlight_genes = T, highlight_list = c("DPM1", "GFAP"), max_overlap = 100)
jk_volcano(df1, fc_col = "log2FC", fdr_col="qVal", genenames = T, highlight_genes = T, highlight_list = c("DPM1", "GFAP"), max_overlap = 20)
jk_volcano(df1, fc_col = "log2FC", fdr_col="qVal", genenames = T, highlight_genes = T, highlight_list = c("DPM1", "AQP4"), max_overlap = 20)
jk_volcano(df1, fc_col = "log2FC", fdr_col="qVal", genenames = T, highlight_genes = F, highlight_list = c("DPM1", "AQP4"), max_overlap = 20)
jk_volcano(df1, fc_col = "log2FC", fdr_col="qVal", genenames = T, highlight_genes = T, highlight_list = c("DPM1", "ABI1", "CAPZA1"), max_overlap = 20)
devtools::check(args = "--no-examples")
devtools::document()
source("R/jk_4ways.R")
source("R/jk_volcano.R")
df1 = read.csv("_testData/4M_WT control vs. TG control.csv")
head(df1)
jk_volcano(df1, fc_col = 'log2FC', fdr_col = 'qVal')
source("R/jk_volcano.R")
jk_volcano(df1, fc_col = 'log2FC', fdr_col = 'qVal')
jk_4wayplot(df1, df1, fc_col = 'log2FC', fdr_col = 'qVal')
devtools::load_all()
df1 = read.csv("_testData/4M_WT control vs. TG control.csv")
jk_4wayplot(df1, df1, fc_col = 'log2FC', fdr_col = 'qVal')
jk_volcano(df1, fc_col = 'log2FC', fdr_col = 'qVal')
devtools::document()
jk_volcano(df1, fc_col = 'log2FC', fdr_col = 'qVal')
jk_4wayplot(df1, df1, fc_col = 'log2FC', fdr_col = 'qVal')
df1 %>%
a
df1 %>% group_by(Gene)
df1 %>% group_by(Gene) %>% count()
jk_4wayplot(df1, df1, fc_col = 'log2FC', fdr_col = 'qVal', plot_fourway = F)
devtools::document()
jk_4wayplot(df1, df1, fc_col = 'log2FC', fdr_col = 'qVal', plot_fourway = F)
devtools::document()
jk_4wayplot(df1, df1, fc_col = 'log2FC', fdr_col = 'qVal', plot_fourway = F)
devtools::document()
jk_4wayplot(df1, df1, fc_col = 'log2FC', fdr_col = 'qVal', plot_fourway = F)
jk_4wayplot(df1, df1, fc_col = 'log2FC', fdr_col = 'qVal', plot_fourway = T, genenames = F)
devtools::document()
jk_4wayplot(df1, df1, fc_col = 'log2FC', fdr_col = 'qVal', plot_fourway = F)
jk_4wayplot(df1, df1, fc_col = 'log2FC', fdr_col = 'qVal', plot_fourway = T, genenames = F)
devtools::document()
jk_4wayplot(df1, df1, fc_col = 'log2FC', fdr_col = 'qVal', plot_fourway = T, genenames = F)
devtools::document()
jk_4wayplot(df1, df1, fc_col = 'log2FC', fdr_col = 'qVal', plot_fourway = T, genenames = F)
devtools::document()
jk_volcano(df1, fc_col = 'log2FC', fdr_col = 'qVal')
jk_4wayplot(df1, df1, fc_col = 'log2FC', fdr_col = 'qVal', plot_fourway = T, genenames = F)
devtools::document()
jk_4wayplot(df1, df1, fc_col = 'log2FC', fdr_col = 'qVal', plot_fourway = T, genenames = F)
devtools::document()
jk_4wayplot(df1, df1, fc_col = 'log2FC', fdr_col = 'qVal', plot_fourway = T, genenames = F)
jk_4wayplot(df1, df1, fc_col = 'log2FC', fdr_col = 'qVal', plot_fourway = T, genenames = F)
devtools::document()
jk_4wayplot(df1, df1, fc_col = 'log2FC', fdr_col = 'qVal', plot_fourway = T, genenames = F)
devtools::document()
jk_4wayplot(df1, df1, fc_col = 'log2FC', fdr_col = 'qVal', plot_fourway = T, genenames = F)
devtools::document()
jk_4wayplot(df1, df1, fc_col = 'log2FC', fdr_col = 'qVal', plot_fourway = T, genenames = F)
devtools::document
devtools::document()
install.packages('gitcred')
install.packages('gitcreds')
library(gitcreds)
gitcreds_set()
devtools::document()
ls()
df1 = read.csv("_testData/4M_WT control vs. TG control.csv")
jk_4wayplot(df1, df1, label_mode='shared')
jk_4wayplot(df1, df1, fdr_col = 'qVal', label_mode='shared')
devtools::document()
jk_4wayplot(df1, df1, fdr_col = 'qVal', label_mode='shared')
devtools::document()
jk_4wayplot(df1, df1, fdr_col = 'qVal', label_mode='shared')
df2 = read.csv("_testData/4M_WT control vs. WT es.csv")
jk_4wayplot(df1, df2, fdr_col = 'qVal', label_mode='shared')
jk_4wayplot(df1, df2, fdr_col = 'qVal', label_mode='unique')
jk_4wayplot(df1, df2, fdr_col = 'qVal', label_mode='all')
jk_4wayplot(df1, df2, fdr_col = 'qVal', label_mode='unique')
jk_4wayplot(df1, df2, fdr_col = 'qVal', label_mode='highlight', highlight_list = c("GNAI2", ÄBI1), "CFL1", "TMEM109")
jk_4wayplot(df1, df2, fc_col = 'log2FC', fdr_col = 'qVal', label_mode='highlight', highlight_list = c("GNAI2", ÄBI1), "CFL1", "TMEM109")
jk_4wayplot(df1, df2, fdr_col = 'qVal', label_mode='uniq')
jk_4wayplot(df1, df2, fdr_col = 'qVal', label_mode='highlight', genenames = F)
jk_4wayplot(df1, df2, fdr_col = 'qVal', label_mode='highlight', genenames = T)
devtools::document()
jk_4wayplot(df1, df2, fdr_col = 'qVal', label_mode='highlight', genenames = T)
devtools::document()
jk_4wayplot(df1, df2, fdr_col = 'qVal', label_mode='highlight', genenames = T)
jk_4wayplot(df1, df2, fdr_col = 'qVal', label_mode='highlight', genenames = T, highlight_list = c("ABI1", "GNAI2"))
jk_4wayplot(df1, df2, fdr_col = 'qVal', label_mode='highlight', color_mode = 'quadrants', genenames = T, highlight_list = c("ABI1", "GNAI2"))
devtools::document()
devtools::document()
jk_4wayplot(df1, df2, fdr_col = 'qVal', label_mode='highlight', color_mode = 'quadrants', genenames = T, highlight_list = c("ABI1", "GNAI2"))
jk_4wayplot(df1, df2, fdr_col = 'qVal', label_mode='unique', color_mode = 'quadrants', genenames = T, highlight_list = c("ABI1", "GNAI2"))
jk_4wayplot(df1, df2, fdr_col = 'qVal', label_mode='shared', color_mode = 'quadrants', genenames = T, highlight_list = c("ABI1", "GNAI2"))
